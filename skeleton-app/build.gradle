plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'co.id.samudrainovasi.buildFlavorsPlugin'
    id 'co.id.samudrainovasi.firebasePlugin'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'

}

android {
    namespace AppConfig.APPLICATION_ID
    compileSdk AppConfig.COMPILE_SDK

    defaultConfig {
        applicationId "${AppConfig.APPLICATION_ID}"
        minSdk AppConfig.MIN_SDK
        versionCode AppConfig.VERSION_CODE
    }
    packaging {
        resources.excludes.add("META-INF/DEPENDENCIES")
        resources.excludes.add("META-INF/LICENSE.md")
        resources.excludes.add("META-INF/LICENSE.txt")
        resources.excludes.add("META-INF/license.txt")
        resources.excludes.add("META-INF/NOTICE")
        resources.excludes.add("META-INF/NOTICE.txt")
        resources.excludes.add("META-INF/notice.txt")
        resources.excludes.add("META-INF/ASL2.0")
        resources.excludes.add("META-INF/*.kotlin_module")
        resources.excludes.add("META-INF/LICENSE-notice.md")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility AppConfig.JVM_TARGET
        targetCompatibility AppConfig.JVM_TARGET
    }
    kotlinOptions {
        jvmTarget = AppConfig.JVM_TARGET
    }
}

dependencies {

    project(':skeleton:presentation').childProjects.values().each { subproject ->
        implementation project(subproject.path)
    }
    project(':skeleton:data').childProjects.values().each { subproject ->
        implementation project(subproject.path)
    }
    implementation(project(":ocean-android-base:model"))
    implementation(project(":ocean-android-base:hub"))
    implementation 'com.google.dagger:hilt-android:2.47'
    kapt 'com.google.dagger:hilt-android-compiler:2.47'
    implementation 'androidx.core:core-ktx:1.10.1'
}